// Code generated by goctl. DO NOT EDIT.
// Source: admin.proto

package server

import (
	"context"

	"bodhiadmin/app/admin/rpc/internal/logic/user"
	"bodhiadmin/app/admin/rpc/internal/svc"
	"bodhiadmin/app/admin/rpc/proto/admin"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	admin.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) InsertUser(ctx context.Context, in *admin.NewUserReq) (*admin.AffectedResp, error) {
	l := userlogic.NewInsertUserLogic(ctx, s.svcCtx)
	return l.InsertUser(in)
}

func (s *UserServer) UpdateUser(ctx context.Context, in *admin.UserReq) (*admin.AffectedResp, error) {
	l := userlogic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UserServer) UpdateStatus(ctx context.Context, in *admin.Uuid) (*admin.AffectedResp, error) {
	l := userlogic.NewUpdateStatusLogic(ctx, s.svcCtx)
	return l.UpdateStatus(in)
}

func (s *UserServer) UpdatePassword(ctx context.Context, in *admin.UserPasswordReq) (*admin.AffectedResp, error) {
	l := userlogic.NewUpdatePasswordLogic(ctx, s.svcCtx)
	return l.UpdatePassword(in)
}

func (s *UserServer) RemoveUser(ctx context.Context, in *admin.Uuid) (*admin.AffectedResp, error) {
	l := userlogic.NewRemoveUserLogic(ctx, s.svcCtx)
	return l.RemoveUser(in)
}

func (s *UserServer) GetUser(ctx context.Context, in *admin.Uuid) (*admin.UserUnit, error) {
	l := userlogic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}

func (s *UserServer) ListUser(ctx context.Context, in *admin.PageReq) (*admin.ListUserResp, error) {
	l := userlogic.NewListUserLogic(ctx, s.svcCtx)
	return l.ListUser(in)
}
